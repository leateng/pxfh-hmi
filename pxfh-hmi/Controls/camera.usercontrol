<div id="camera" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControl" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="405" data-tchmi-height="350" data-tchmi-width-unit="px" data-tchmi-height-unit="px" data-tchmi-creator-viewport-width="500" data-tchmi-creator-viewport-height="500" data-tchmi-creator-visibility="Visible" data-tchmi-creator-locked="False">
<div id="TcHmiTextblock_12" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="30" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%title%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Left" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="22">
</div>
<div id="TcHmiContainer" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height="320" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="30" data-tchmi-top-unit="px" data-tchmi-width="405" data-tchmi-width-unit="px">
<div id="TcHmiImage_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiImage" data-tchmi-height="320" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="405" data-tchmi-width-unit="px" data-tchmi-background-image="Images/icons_camera_normal.svg" data-tchmi-background-image-width="30" data-tchmi-background-image-width-unit="%" data-tchmi-src="%pp%imageSrc%/pp%">
<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>



<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiImage_3.onLoad",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "console.log(\"image onload...\");",
          "",
          "var control = TcHmi.Symbol.readEx(\"%ctrl%TcHmiImage_3%/ctrl%\");",
          "",
          "// 获取dom",
          "var $imageContainer = control.getElement();",
          "const container = $imageContainer.get(0)",
          "const image = $imageContainer.find('img')[0];",
          "",
          "console.log(container);",
          "console.log(image);",
          "",
          "",
          "",
          "// 全局变量",
          "let result,",
          "\tx,",
          "\ty,",
          "\tisLoad = false,",
          "\tscale = 1,",
          "\tminScale = 0.1,",
          "\tmaxScale = 1,",
          "\tisPointerdown = false, // 按下标识",
          "\tpoint = { x: 0, y: 0 }, // 第一个点坐标",
          "\tdiff = { x: 0, y: 0 }, // 相对于上一次pointermove移动差值",
          "\tlastPointermove = { x: 0, y: 0 }; // 用于计算diff",
          "\tinitOffset = {x: 0, y: 0};",
          "\tinitScale = 1",
          "",
          "// 图片加载完成后再绑定事件",
          "",
          "if (isLoad == false) {",
          "\tminScale = container.clientWidth / image.naturalWidth;",
          "\tresult = {width: image.naturalWidth, height: image.naturalHeight};",
          "\timage.style.width = result.width + 'px';",
          "\timage.style.height = result.height + 'px';",
          "\tx = (container.clientWidth - result.width) * 0.5;",
          "\ty = (container.clientHeight - result.height) * 0.5;",
          "\tscale = container.clientWidth / image.naturalWidth;",
          "\tinitScale = scale;",
          "\tinitOffset.x = x;",
          "\tinitOffset.y = y;",
          "\timage.style.transform = `translate3d(${x}px, ${y}px, 0) scale(${scale})`;",
          "\t",
          "\t// 拖拽查看",
          "\tdrag();",
          "\t// 滚轮缩放",
          "\twheelZoom();",
          "}",
          "else {",
          "\tisLoad = true;",
          "}",
          "",
          "// 拖拽查看",
          "function drag() {",
          "\t// 绑定 pointerdown",
          "\timage.addEventListener('pointerdown', function(e) {",
          "\t\tisPointerdown = true;",
          "\t\timage.setPointerCapture(e.pointerId);",
          "\t\tpoint = { x: e.clientX, y: e.clientY };",
          "\t\tlastPointermove = { x: e.clientX, y: e.clientY };",
          "\t});",
          "\t// 绑定 pointermove",
          "\timage.addEventListener('pointermove', function(e) {",
          "\t\tif (isPointerdown) {",
          "\t\t\tconst current1 = { x: e.clientX, y: e.clientY };",
          "\t\t\tdiff.x = current1.x - lastPointermove.x;",
          "\t\t\tdiff.y = current1.y - lastPointermove.y;",
          "\t\t\tlastPointermove = { x: current1.x, y: current1.y };",
          "\t\t\tx += diff.x;",
          "\t\t\ty += diff.y;",
          "\t\t\timage.style.transform = 'translate3d(' + x + 'px, ' + y + 'px, 0) scale(' + scale + ')';",
          "\t\t}",
          "\t\te.preventDefault();",
          "\t});",
          "\t// 绑定 pointerup",
          "\timage.addEventListener('pointerup', function(e) {",
          "\t\tif (isPointerdown) {",
          "\t\t\tisPointerdown = false;",
          "\t\t}",
          "\t});",
          "\t// 绑定 pointercancel",
          "\timage.addEventListener('pointercancel', function(e) {",
          "\t\tif (isPointerdown) {",
          "\t\t\tisPointerdown = false;",
          "\t\t}",
          "\t});",
          "}",
          "",
          "",
          "// 滚轮缩放",
          "function wheelZoom() {",
          "\tcontainer.addEventListener('wheel', function(e) {",
          "\t\tlet ratio = 1.1;",
          "\t\t// 缩小",
          "\t\tif (e.deltaY > 0) {",
          "\t\t\tratio = 1 / 1.1;",
          "\t\t}",
          "\t\t// 限制缩放倍数",
          "\t\tconst _scale = scale * ratio;",
          "\t\tif (_scale > maxScale) {",
          "\t\t\tratio = maxScale / scale;",
          "\t\t\tscale = maxScale;",
          "\t\t} else if (_scale < minScale) {",
          "\t\t\tratio = minScale / scale;",
          "\t\t\tscale = minScale;",
          "\t\t} else {",
          "\t\t\tscale = _scale;",
          "\t\t}",
          "\t\t// 目标元素是img说明鼠标在img上，以鼠标位置为缩放中心，否则默认以图片中心点为缩放中心",
          "\t\tif (e.target.tagName === 'IMG') {",
          "\t\t\tconst origin = {",
          "\t\t\t\tx: (ratio - 1) * result.width * 0.5,",
          "\t\t\t\ty: (ratio - 1) * result.height * 0.5",
          "\t\t\t};",
          "\t\t\t// 计算偏移量",
          "\t\t\tx -= (ratio - 1) * (e.clientX - x) - origin.x;",
          "\t\t\ty -= (ratio - 1) * (e.clientY - y) - origin.y;",
          "\t\t}",
          "\t\timage.style.transform = 'translate3d(' + x + 'px, ' + y + 'px, 0) scale(' + scale + ')';",
          "\t\te.preventDefault();",
          "\t});",
          "}"
        ],
        "injectContextObject": true,
        "asyncWait": true,
        "waitMode": "Synchronous"
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiImage_3::BackgroundImage%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/Path",
          "value": null
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>


</div>