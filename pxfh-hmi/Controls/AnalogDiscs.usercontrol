<div id="analog_discs" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControl" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%" data-tchmi-creator-viewport-width="320" data-tchmi-creator-viewport-height="320">
<div id="TcHmiContainer_AnalogDiscs" data-tchmi-type="TcHmi.Controls.System.TcHmiContainer" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%">

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>





<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%PLC1.GVL_HMI.CellMatrix%/s%",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "console.log(\"==status matrix changed==\");",
          "",
          "TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.nMaxColumn%/s%\", function(colData){",
          "  TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.nMaxRow%/s%\", function(rowData){",
          "    const rowSize = rowData.value;",
          "    const colSize = colData.value;",
          "      ",
          "    const control = TcHmi.Symbol.readEx(\"%ctrl%TcHmiContainer_AnalogDiscs%/ctrl%\");",
          "    const container = control.getElement(); //获取dom",
          "    const $container = jQuery(container).children().first();",
          "    ",
          "    TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.CellMatrix%/s%\", function(data){",
          "        const statusMatrix = data.value;",
          "        const children = $container.children()",
          "        ",
          "      for(i = 0; i < rowSize; i++) {",
          "        for(j = 0; j < colSize; j++) {",
          "            const index = i * colSize + j;",
          "            const element = jQuery(children[index]);",
          "            ",
          "            const statusIndex = (rowSize * colSize) - 1 - index;",
          "            const elementStatus = statusMatrix[statusIndex];",
          "            ",
          "            element.attr({\"status\": elementStatus});",
          "        }",
          "      }",
          "    });",
          "  });",
          "});"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  },
  {
    "event": "%s%PLC1.GVL_HMI.nMaxColumn%/s%",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "console.log(\"init analog matrixSize\");",
          "",
          "TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.nMaxColumn%/s%\", function(colData){",
          "  TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.nMaxRow%/s%\", function(rowData){",
          "    const rowSize = rowData.value;",
          "    const colSize = colData.value;",
          "",
          "    const control = TcHmi.Symbol.readEx(\"%ctrl%TcHmiContainer_AnalogDiscs%/ctrl%\");",
          "    const container = control.getElement(); //获取dom",
          "    const $container = jQuery(container).children().first();",
          "    if(! $container.hasClass(\"analog-discs-grid-container\")){",
          "      $container.addClass(\"analog-discs-grid-container\");",
          "    }",
          "    $container.css(\"--row\", rowSize);",
          "    $container.css(\"--col\", colSize);",
          "    $container.empty();",
          "    ",
          "    for(i = 0; i < rowSize; i++) {",
          "      for(j = 0; j < colSize; j++) {",
          "        var col = jQuery(\"<div class='analog-discs-grid-item'></div>\");",
          "        col.attr({\"rowIndex\": i, \"colIndex\": j});",
          "        $container.append(col);",
          "      }",
          "    }",
          "    ",
          "    TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.CellMatrix%/s%\", function(data){",
          "      const statusMatrix = data.value;",
          "      const children = $container.children();",
          "      ",
          "      for(i = 0; i < rowSize * colSize; i++) {",
          "      \tconst element = jQuery(children[i]);",
          "      \tconst statusIndex = (rowSize * colSize) - 1 - i;",
          "        const elementStatus = statusMatrix[statusIndex];",
          "            ",
          "        element.attr({\"status\": elementStatus});",
          "      }",
          "    });",
          "  });",
          "});"
        ],
        "injectContextObject": true,
        "asyncWait": true,
        "waitMode": "Asynchronous"
      },
      {
        "objectType": "JavaScript",
        "active": false,
        "sourceLines": [
          "console.log(\"update matrix status\");",
          "",
          "TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.nMaxColumn%/s%\", function(colData){",
          "  TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.nMaxRow%/s%\", function(rowData){",
          "    const rowSize = rowData.value;",
          "    const colSize = colData.value;",
          "      ",
          "    const control = TcHmi.Symbol.readEx(\"%ctrl%TcHmiContainer_AnalogDiscs%/ctrl%\");",
          "    const container = control.getElement(); //获取dom",
          "    const $container = jQuery(container).children().first();",
          "    ",
          "    TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.CellMatrix%/s%\", function(data){",
          "        const statusMatrix = data.value;",
          "        const children = $container.children()",
          "        ",
          "      for(i = 0; i < rowSize; i++) {",
          "        for(j = 0; j < colSize; j++) {",
          "            const index = i * colSize + j;",
          "            const element = jQuery(children[index]);",
          "            const elementStatus = statusMatrix[i][j];",
          "            ",
          "            element.attr({\"status\": elementStatus});",
          "        }",
          "      }",
          "    });",
          "  });",
          "});"
        ],
        "injectContextObject": true,
        "asyncWait": true,
        "waitMode": "Asynchronous"
      }
    ]
  },
  {
    "event": "TcHmiContainer_AnalogDiscs.onInitialized",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "console.log(\"add analog click event\");",
          "",
          "const control = TcHmi.Symbol.readEx(\"%ctrl%TcHmiContainer_AnalogDiscs%/ctrl%\");",
          "const container = control.getElement(); //获取dom",
          "jQuery(container).on('click', '.analog-discs-grid-item', function() {",
          "  console.log('子元素被点击');",
          "  console.log($(this));",
          "  console.log($(this).attr(\"status\"));",
          "",
          "  let status = $(this).attr(\"status\");",
          "  const rowIndex = parseInt($(this).attr(\"rowIndex\"));",
          "  const colIndex = parseInt($(this).attr(\"colIndex\"));",
          "  ",
          "  if(String(status) == \"0\") {",
          "    status = 1; ",
          "  }",
          "  else {",
          "    status = 0;",
          "  }",
          "",
          "  TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.nMaxColumn%/s%\", function(colData){",
          "  \tTcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.nMaxRow%/s%\", function(rowData){",
          "        const rowSize = rowData.value;",
          "    \tconst colSize = colData.value;",
          "\t    const clickIndex = colSize * rowIndex + colIndex;",
          "\t    const statusIndex = rowSize * colSize - 1 - clickIndex;",
          "\t    ",
          "\t    console.log(\"======\");",
          "\t    console.log(statusIndex);",
          "\t    console.log(status);",
          "\t    ",
          "\t    const name = `%s%PLC1.GVL_HMI.CellMatrix[${statusIndex}]%/s%`;",
          "\t    TcHmi.Symbol.writeEx(name, status, function (data) {",
          "\t        if (data.error === TcHmi.Errors.NONE) {",
          "\t            console.log('update status success');",
          "\t        } else {",
          "\t            console.log('update status failed');",
          "\t            console.log(name);",
          "\t            console.log(data);",
          "\t        }",
          "\t    });",
          "\t  });",
          "  });",
          "});"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  },
  {
    "event": "%s%PLC1.GVL_HMI.nMaxRow%/s%",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "console.log(\"init analog matrixSize\");",
          "",
          "TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.nMaxColumn%/s%\", function(colData){",
          "  TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.nMaxRow%/s%\", function(rowData){",
          "    const rowSize = rowData.value;",
          "    const colSize = colData.value;",
          "",
          "    const control = TcHmi.Symbol.readEx(\"%ctrl%TcHmiContainer_AnalogDiscs%/ctrl%\");",
          "    const container = control.getElement(); //获取dom",
          "    const $container = jQuery(container).children().first();",
          "    if(! $container.hasClass(\"analog-discs-grid-container\")){",
          "      $container.addClass(\"analog-discs-grid-container\");",
          "    }",
          "    $container.css(\"--row\", rowSize);",
          "    $container.css(\"--col\", colSize);",
          "    $container.empty();",
          "    ",
          "    for(i = 0; i < rowSize; i++) {",
          "      for(j = 0; j < colSize; j++) {",
          "        var col = jQuery(\"<div class='analog-discs-grid-item'></div>\");",
          "        col.attr({\"rowIndex\": i, \"colIndex\": j});",
          "        $container.append(col);",
          "      }",
          "    }",
          "    ",
          "    TcHmi.Symbol.readEx2(\"%s%PLC1.GVL_HMI.CellMatrix%/s%\", function(data){",
          "      const statusMatrix = data.value;",
          "      const children = $container.children();",
          "      ",
          "      for(i = 0; i < rowSize * colSize; i++) {",
          "      \tconst element = jQuery(children[i]);",
          "      \tconst statusIndex = (rowSize * colSize) - 1 - i;",
          "        const elementStatus = statusMatrix[statusIndex];",
          "            ",
          "        element.attr({\"status\": elementStatus});",
          "      }  ",
          "    });",
          "  });",
          "});"
        ],
        "injectContextObject": true,
        "asyncWait": true,
        "waitMode": "Asynchronous"
      }
    ]
  }
]
</script>
</div>
</div>